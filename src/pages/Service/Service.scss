@use "sass:map";
@use "../../scss/abstracts/variables" as v;
@use "../../scss/abstracts/mixins" as m;

body {
  font-family: "Noto Sans TC", sans-serif;
}

.service {
  @include m.flex-center;
  justify-content: start;
  width: 100%;
  height: 100vh;
  background-image: url("https://cdn.jsdelivr.net/gh/RalphSN/images@main/official-images/background/service-ex.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  flex-direction: column;
  color: v.$white;
  padding-top: 30vh;

  .service-title {
    color: v.$title;
    font-size: 3rem;
    letter-spacing: 0.1rem;
  }

  .service-dots {
    @include m.flex-center;
    width: 100%;
    height: auto;
    gap: 2.5rem;
    margin: 0.5rem auto;
  }

  $services: (
    cust: (
      dot: v.$cust,
      bg: v.$cust-bk,
      text: v.$cust,
    ),
    sdk: (
      dot: v.$sdk,
      bg: v.$sdk-bk,
      text: v.$sdk,
    ),
    design: (
      dot: v.$design,
      bg: v.$design-bk,
      text: v.$design,
    ),
    develop: (
      dot: v.$develop,
      bg: v.$develop-bk,
      text: v.$develop,
    ),
    pub: (
      dot: v.$pub,
      bg: v.$pub-bk,
      text: v.$pub,
    ),
    opt: (
      dot: v.$opt,
      bg: v.$opt-bk,
      text: v.$opt,
    ),
  );

  @each $name, $colors in $services {
    .#{$name} {
      background-color: map.get($colors, dot);
    }
    .service-item.#{$name} {
      background-color: map.get($colors, bg);
    }
    .service-word.#{$name}-word {
      color: map.get($colors, text);
    }
  }

  .dot {
    width: 22px;
    aspect-ratio: 1/1;
    border-radius: 50%;
  }

  .service-item-container {
    display: flex;
    justify-content: center;
    margin-top: 5rem;
  }

  .service-item {
    @include m.flex-center;
    width: 200px;
    aspect-ratio: 1/1;
    border-radius: 50%;
    position: relative;

    &::after {
      content: "";
      position: absolute;
      width: 40px;
      height: 55px;
      background-color: inherit;
      clip-path: polygon(100% 50%, 0 0, 0 100%);
      right: -35px;
      top: 50%;
      transform: translateY(-50%);
      z-index: 2;
    }

    &:last-child::after {
      content: none;
    }
  }

  .service-item-inner {
    @include m.flex-center;
    justify-content: start;
    flex-direction: column;
    width: 160px;
    aspect-ratio: 1/1;
    border-radius: 50%;
    background-color: v.$white;
    overflow: hidden;
    box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.4);
    padding-top: 1rem;
    z-index: 5;
  }

  .service-item-icon {
    width: 45px;
    height: 50px;
    img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
  }

  .service-word {
    font-size: 1.1rem;
    font-weight: 800;
    margin-top: 0.5rem;
  }
}

@media (max-width: 1024px) {
  .service {
    padding-top: 10rem;
    .service-title {
      margin-bottom: 2rem;
    }
    .service-dots {
      margin-bottom: 5rem;
    }
    .service-item-container {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1rem;
      .service-item {
        &::after {
          display: none;
        }
      }
    }
  }
}

@media (max-width: 640px) {
  .service {
    
  }
}
